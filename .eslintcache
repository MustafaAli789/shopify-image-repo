[{"C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\index.js":"1","C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\App.js":"2","C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\reportWebVitals.js":"3","C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\Components\\MainPage.js":"4","C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\Components\\Login.js":"5","C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\Components\\Register.js":"6","C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\Components\\ImageCard.js":"7","C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\Components\\ImageModal.js":"8","C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\firebase.js":"9","C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\Components\\DeleteModal.js":"10","C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\firebaseWithSecrets.js":"11"},{"size":1105,"mtime":1609475548775,"results":"12","hashOfConfig":"13"},{"size":1810,"mtime":1609478030095,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":9367,"mtime":1609475309009,"results":"16","hashOfConfig":"13"},{"size":4272,"mtime":1609470144090,"results":"17","hashOfConfig":"13"},{"size":4549,"mtime":1609469678286,"results":"18","hashOfConfig":"13"},{"size":2723,"mtime":1609464155726,"results":"19","hashOfConfig":"13"},{"size":6975,"mtime":1609465692359,"results":"20","hashOfConfig":"13"},{"size":621,"mtime":1609475241550,"results":"21","hashOfConfig":"13"},{"size":1388,"mtime":1609464215745,"results":"22","hashOfConfig":"13"},{"size":541,"mtime":1609475165477,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"1n9ol4o",{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\index.js",["55"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Amplify from 'aws-amplify'\nimport config from './config.json'\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: process.env.REACT_APP_AMPLIFY_COGNITO_REGION,\n    userPoolId: process.env.REACT_APP_AMPLIFY_COGNITO_USER_POOL_ID,\n    userPoolWebClientId: process.env.REACT_APP_AMPLIFY_COGNITO_CLIENT_ID,\n    authenticationFlowType: 'USER_PASSWORD_AUTH',\n    identityPoolId: process.env.REACT_APP_AMPLIFY_COGNITO_IDENTITY_POOL_ID\n  },\n  Storage :{\n    AWSS3: {\n      bucket: process.env.REACT_APP_AMPLIFY_S3_BUCKET,\n      region: process.env.REACT_APP_AMPLIFY_S3_REGION\n    }\n  }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["56","57"],"C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\App.js",["58","59","60"],"import logo from './logo.svg';\nimport './App.css';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport MainPage from './Components/MainPage.js'\nimport Login from './Components/Login'\nimport Register from './Components/Register'\nimport { Auth } from 'aws-amplify'\n\nimport {useEffect, useState} from 'react'\n\nfunction App() {\n  const [authenticated, setAuth] = useState(false)\n  const [isAuthenticating, setIsAuthenticating] = useState(true)\n  const [user, setUser] = useState(null)\n  const [userConfirmed, setUserConfirmed] = useState(false)\n\n\n  useEffect(async () => {\n    try{\n      const session = await Auth.currentSession()\n      setAuth(true)\n      const user = await Auth.currentAuthenticatedUser()\n      setUser(user)\n      setUserConfirmed(true)\n      setIsAuthenticating(false)\n    } catch(error) {\n      setIsAuthenticating(true)\n      setAuth(false)\n      console.log(error)\n    }\n  }, [])\n\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" render={(props) => ((!isAuthenticating && authenticated) ? <MainPage {...props} user={user} userConfirmed={userConfirmed} authenticated={authenticated} setAuth={setAuth}/> : <Redirect to=\"/login\" />)}></Route>\n        <Route exact path=\"/login\" render={(props) => <Login {...props} user={user} authenticated={authenticated} setAuth={setAuth} setUser={setUser} isAuthenticating={isAuthenticating} setIsAuthenticating={setIsAuthenticating} setUserConfirmed={setUserConfirmed}/>}></Route>\n        <Route exact path=\"/register\" render={(props) => <Register {...props} user={user} authenticated={authenticated} setAuth={setAuth} setUser={setUser} isAuthenticating={isAuthenticating} setIsAuthenticating={setIsAuthenticating} />}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\reportWebVitals.js",[],"C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\Components\\MainPage.js",["61","62","63","64","65"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Auth, Storage} from 'aws-amplify'\r\nimport ImageCard from './ImageCard'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport ImageModal from './ImageModal'\r\nimport firebase from '../firebaseWithSecrets'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst imageDataModel = userData => {\r\n    return {\r\n        \"avatarInitial\": userData.username.charAt(0),\r\n        \"imageName\": \"\",\r\n        \"imageId\": \"\",\r\n        \"title\": \"\",\r\n        \"date\": \"\",\r\n        \"imageSrc\": \"\",\r\n        \"description\": \"\",\r\n        \"color\": \"#FF0000\"\r\n    }\r\n}\r\n\r\nconst MainPage = props => {\r\n    const classes = useStyles();\r\n    const [imagesData, setImagesData] = useState([])\r\n    \r\n    const [imageModalOpen, setImageModalOpen] = useState(false)\r\n    const [imageModalAction, setImageModalAction] = useState('CREATE')\r\n    const [imageModalData, setImageModalData] = useState(imageDataModel(props.user))\r\n    const [imageUpdated, setImageUpdated] = useState(false)\r\n\r\n    const [db, setDb] = useState(null)\r\n\r\n    //Auth redirect and initialize images data\r\n    useEffect(() => {\r\n        if (!props.authenticated) {\r\n            setDb(null)\r\n            setImagesData([])\r\n            props.history.push(\"/login\")\r\n        }\r\n        setDb(firebase.firestore())\r\n    }, [props.authenticated])\r\n\r\n    useEffect(() => {\r\n        if (db != null) {\r\n            initializeImageData()\r\n        }\r\n    }, [db])\r\n\r\n    const initializeImageData = async () => {\r\n        let email = props.user.username\r\n        let imagesData = []\r\n        try {\r\n            const snapshot = await db.collection(email).get()\r\n            imagesData = snapshot.docs.map(doc => {\r\n                return Object.assign({}, doc.data(), { \r\n                    \"avatarInitial\": props.user.username.charAt(0),\r\n                    \"imageId\": doc.id\r\n                })\r\n            })\r\n        } catch(err) {\r\n            alert(\"Issue in retrieving image data\", err)\r\n            return\r\n        }\r\n\r\n        for (let i =0; i<imagesData.length; i++) {\r\n            let image = imagesData[i]\r\n            await Storage.get(image.imageId, {level: 'private'})\r\n                .then(res => {\r\n                    image.imageSrc = res\r\n                })\r\n                .catch((err) => {\r\n                    alert(\"Issue retrieving image, blank image will be used\", err)\r\n                    //TODO update this to an actual image in resources\r\n                    image.imageSrc = \"\"\r\n                })\r\n        }\r\n        setImagesData(imagesData)\r\n    }\r\n\r\n    const onImageCardUpdateClick = imageData => {\r\n        setImageModalAction('UPDATE')\r\n        setImageModalData(imageData)\r\n        setImageModalOpen(true)\r\n    }\r\n\r\n    const resetImageData = () => {\r\n        setImageModalData(imageDataModel(props.user))\r\n    }\r\n\r\n    const toBase64 = file => new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n\r\n    const persistImageDataInDb = async (email, id, data, file) => {\r\n        try {\r\n            await db.collection(email).doc(id).set({\r\n                imageName: file.name,\r\n                title: data.title,\r\n                description: data.description,\r\n                date: new Date().toISOString().split('T')[0],\r\n                color: data.color\r\n            })\r\n            return true\r\n        } catch (err) {\r\n            alert(\"Error persisting image data\", err)\r\n            return false\r\n        }\r\n    }\r\n\r\n    const persistImageInS3 = async (id, file) => {\r\n        try{\r\n            await Storage.put(id, file, {\r\n                level: 'private',\r\n                contentType: 'image/png'\r\n            })\r\n            return true\r\n        }catch(err) {\r\n            alert(\"Error persisting image\", err)\r\n            return false\r\n        }\r\n    }\r\n\r\n    //DELETING IMAGE\r\n    const deleteImage = async (id) => {\r\n        \r\n        let deletedFromDb = false\r\n        try {\r\n            await db.collection(props.user.username).doc(id).delete()\r\n            deletedFromDb = true\r\n        } catch(err) {\r\n            alert(\"Error deleting image data\")\r\n        }\r\n        if (deletedFromDb){\r\n            try {\r\n                await Storage.remove(id, { level: 'private' })\r\n            } catch(err) {\r\n                alert(\"Error deleting image data\")\r\n            }\r\n        }\r\n\r\n        //Fake delete if the above doesnt end up working\r\n        let tempData = imagesData\r\n        tempData = tempData.filter(img => {\r\n            return img.imageId != id\r\n        })\r\n        setImagesData(tempData)\r\n    }\r\n\r\n    //UPDATING IMAGE\r\n    const updateImage = async (data, file) => {\r\n        let email = props.user.username\r\n        if (persistImageDataInDb(email, data.imageId, data, file) && imageUpdated) {\r\n            persistImageInS3(data.imageId, file)\r\n        }\r\n\r\n        //Can still fake update locally even if the above fail and throw some errors\r\n        let tempData = imagesData\r\n        for (let i =0; i< tempData.length; i++) {\r\n            if (tempData[i].imageId == data.imageId) {\r\n                tempData[i] = {...tempData[i], ...data}\r\n                if (imageUpdated) {\r\n                    let src = await toBase64(file)\r\n                    tempData[i].imageSrc = src\r\n                }\r\n                break\r\n            }\r\n        }\r\n        setImagesData(tempData)\r\n        setImageModalOpen(false)\r\n    }\r\n\r\n    //CREATING IMAGE\r\n    const createNewImage = async (data, file) => {\r\n        let email = props.user.username\r\n        let id = new Date().valueOf() + \"-\" + email\r\n        \r\n        if (persistImageDataInDb(email, id, data, file)) {\r\n            persistImageInS3(id, file)\r\n        }\r\n\r\n        //Can still fake update even if the above fail and throw some errors\r\n        let imageSrc = await toBase64(file)\r\n        let imageDataObj = {\r\n            \"imageName\": file.name,\r\n            \"title\": data.title,\r\n            \"description\": data.description,\r\n            \"date\": new Date().toISOString().split('T')[0],\r\n            \"color\": data.color,\r\n            \"imageId\": id,\r\n            \"avatarInitial\": email.charAt(0),\r\n            \"imageSrc\": imageSrc\r\n        }\r\n        setImagesData([...imagesData, imageDataObj])\r\n        setImageModalOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ImageModal createNewImage={createNewImage} updateImage={updateImage} imageModalData={imageModalData} setImageModalData={setImageModalData} imageModalOpen={imageModalOpen} setImageModalOpen={(state) => setImageModalOpen(state)} action={imageModalAction} setImageUpdated={(state) => setImageUpdated(state)} />\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Shopify Image Repository\r\n                </Typography>\r\n                <Button color=\"inherit\" onClick={() => {\r\n                    props.setAuth(false)\r\n                    props.history.push(\"/login\")\r\n                    Auth.signOut()\r\n                }}>Logout</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className=\"content\" style={{ padding: \"0px 16px 0px 16px\" }}>\r\n                {\r\n                    !props.userConfirmed && (\r\n                        <div style={{ marginTop: \"1rem\" }}>\r\n                            <Typography variant=\"subtitle2\" style={{ color: 'red' }}>\r\n                                Hey {props.user.username}. Welcome to your image repo. Please verify your email address or you will not be able to login later. Thanks\r\n                            </Typography>\r\n                        </div>\r\n                    )\r\n                }\r\n                <div style={{ display: 'flex', justifyContent: 'center', marginTop: '0.8rem' }}>\r\n                    <IconButton onClick={() => {\r\n                        resetImageData()\r\n                        setImageModalAction('CREATE')\r\n                        setImageModalOpen(true)\r\n                    }} size=\"medium\" style={{ width: \"100%\", borderRadius: \"10px\" }} aria-label=\"Add a photo\">\r\n                        <AddAPhotoIcon style={{ width:'1.5em', height: '1.5em' }} />\r\n                    </IconButton>\r\n                </div>\r\n                <div style={{ display: 'flex', flexFlow: 'row wrap', marginTop: '1rem' }}>\r\n                    {\r\n                        imagesData.map((img, id) => {\r\n                            return <ImageCard deleteImg={() => deleteImage(img.imageId)} updateImage={() => onImageCardUpdateClick(img)} key={id} imageData={img}/>\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage","C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\Components\\Login.js",["66","67","68"],"import React, { useState, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Auth } from 'aws-amplify'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Shopify Image Repo\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Login(props) {\r\n  const classes = useStyles();\r\n  const [password, setPassword] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [error, setError] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    if(props.authenticated && !props.isAuthenticating) {\r\n        props.history.push(\"/\")\r\n    }\r\n  }, [props.authenticated, props.isAuthenticating])\r\n\r\n  let signInClicked = async () => {\r\n    if (email.trim().length == 0 || password.trim().length == 0) {\r\n        setError(\"Email and/or password must not be empty\")\r\n    } else {\r\n        setError(\"\")\r\n        try {\r\n            const signInResp = await Auth.signIn(email, password)\r\n            props.setAuth(true)\r\n            props.setUser(signInResp)\r\n            props.setUserConfirmed(true)\r\n            props.setIsAuthenticating(false)\r\n        } catch(error) {\r\n            setError(error.message)\r\n        }\r\n    }\r\n  }\r\n\r\n  let passwordOnChange = (e) => {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  let emailAddressOnChange = (e) => {\r\n    setEmail(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login\r\n        </Typography>\r\n        <form className={classes.form}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={emailAddressOnChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={passwordOnChange}\r\n          />\r\n          {\r\n              error.trim().length > 0 &&\r\n              <Typography component=\"p\" variant=\"subtitle2\" color=\"error\">\r\n                {error}\r\n              </Typography>\r\n          }\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={signInClicked}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/register\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\Components\\Register.js",["69","70","71"],"import React, {useState, useEffect} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Auth } from 'aws-amplify'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Shopify Image Repo\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Register(props) {\r\n  const classes = useStyles();\r\n\r\n  const [password, setPassword] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [error, setError] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    if(props.authenticated && !props.isAuthenticating) {\r\n        props.history.push(\"/\")\r\n    }\r\n  }, [props.authenticated, props.isAuthenticating])\r\n\r\n  let signUpClicked = async () => {\r\n    if (email.trim().length == 0 || password.trim().length == 0) {\r\n        setError(\"Email and/or password must not be empty\")\r\n    } else {\r\n        setError(\"\")\r\n        try {\r\n            const registerResp = await Auth.signUp({\r\n                username: email,\r\n                password: password,\r\n                attributes: {\r\n                    email: email\r\n                }\r\n            })\r\n            props.setAuth(true)\r\n            debugger\r\n            props.setUser(registerResp.user)\r\n            props.setIsAuthenticating(false)\r\n        } catch(error) {\r\n            setError(error.message)\r\n        }\r\n    }\r\n  }\r\n\r\n  let passwordOnChange = (e) => {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  let emailAddressOnChange = (e) => {\r\n    setEmail(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register\r\n        </Typography>\r\n        <form className={classes.form}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={emailAddressOnChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={passwordOnChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {\r\n              error.trim().length > 0 &&\r\n              <Typography component=\"p\" variant=\"subtitle2\" color=\"error\">\r\n                {error}\r\n              </Typography>\r\n          }\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={signUpClicked}\r\n          >\r\n            Register\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\Components\\ImageCard.js",["72","73"],"\r\nimport React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button'\r\nimport './ImageCard.css'\r\nimport DeleteModal from './DeleteModal'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  }\r\n}));\r\n\r\nconst ImageCard = props => {\r\n\r\n\tconst classes = useStyles();\r\n    const avatarStyle = {backgroundColor: props.imageData.color}\r\n    const [open, setOpen] = useState(false)\r\n    const [deleteModalOpen, setDeleteModalOpen] = useState(false)\r\n   \r\n    return (  \r\n        <Card className={classes.root + \" imageCard\"}>\r\n            <Dialog open={open} onClose={() => setOpen(false)}>\r\n                <img style={{ width: '100%' }} src={props.imageData.imageSrc} />\r\n            </Dialog>\r\n            <DeleteModal imageTitle={props.imageData.title} deleteImg={props.deleteImg} open={deleteModalOpen} setDeleteModalOpen={(state) => setDeleteModalOpen(state)}></DeleteModal>\r\n            <CardHeader\r\n                avatar={\r\n                <Avatar aria-label=\"recipe\" style={avatarStyle}>\r\n                    {props.imageData.avatarInitial}\r\n                </Avatar>\r\n                }\r\n                title={props.imageData.title}\r\n                subheader={props.imageData.date}\r\n            />\r\n            <CardMedia\r\n                className={'imageCard'}\r\n                onClick={() => setOpen(true)}\r\n                className={classes.media}\r\n                image={props.imageData.imageSrc}\r\n                title={props.imageData.imageId}\r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\t\t\t\t\t{props.imageData.description}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" color=\"primary\" onClick={() => props.updateImage(props.imageData)}>\r\n                \tUpdate\r\n                </Button>\r\n                <Button size=\"small\" color=\"primary\" onClick={() => {\r\n                    setDeleteModalOpen(true)\r\n                }}>\r\n                \tDelete\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ImageCard;","C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\Components\\ImageModal.js",["74","75","76","77","78","79","80","81"],"import {useState, useEffect} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { SliderPicker } from 'react-color';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {DropzoneArea} from 'material-ui-dropzone'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ImageModal = props => {\r\n    let action = props.action == \"CREATE\" ? 'Create' : 'Update'\r\n\r\n    const [imageTitle, setImageTitle] = useState(\"\")\r\n    const [imageColor, setImageColor] = useState(\"#FF0000\")\r\n    const [imageFile, setImageFile] = useState(\"\")\r\n    const [imageDesc, setImageDesc] = useState(\"\")\r\n\r\n    const [imageLastModified, setImageLastModified] = useState(null)\r\n    \r\n    const [file, setFile] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setImageTitle(props.imageModalData[\"title\"])\r\n        setImageColor(props.imageModalData[\"color\"])\r\n        setImageFile(props.imageModalData[\"imageSrc\"])\r\n        setImageDesc(props.imageModalData[\"description\"])\r\n\r\n        if (props.imageModalData[\"imageSrc\"] != \"\") {\r\n            let img = new File([\"\"], props.imageModalData[\"imageName\"],{type: \"image/png\"})\r\n            setFile(img)\r\n            setImageLastModified(img.lastModified)\r\n        } else {\r\n            setFile(null)\r\n        }\r\n        props.setImageUpdated(false)\r\n    }, [props.imageModalOpen])\r\n    \r\n    const useStyles = makeStyles(theme => createStyles({\r\n        previewChip: {\r\n          minWidth: 160,\r\n          maxWidth: 210\r\n        },\r\n      }));\r\n\r\n    let classes = useStyles();\r\n\r\n    const validateData = (title, file) => {\r\n        let titleError = \"\"\r\n        let fileError = \"\"\r\n        if (title.trim().length == 0) {\r\n            titleError = \"Title must not be empty\"\r\n        } else {\r\n            titleError = \"\"\r\n        }\r\n        if (file == null) {\r\n            fileError = \"Must attach an image\"\r\n        } else {\r\n            fileError = \"\"\r\n        }\r\n\r\n        if (titleError.length > 0 && fileError.length > 0) {\r\n            alert(titleError +  \" and \" + fileError)\r\n        } else if (titleError.length > 0) {\r\n            alert(titleError)\r\n        } else if (fileError.length > 0) {\r\n            alert(fileError)\r\n        } else {\r\n            return true\r\n        }\r\n\r\n        return false\r\n\r\n    }\r\n    \r\n    return (\r\n        <Dialog open={props.imageModalOpen} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle style={{ paddingBottom: \"0\" }} id=\"form-dialog-title\">{action}</DialogTitle>\r\n            <DialogContent style={{ paddingTop: \"0\" }}>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"imageName\"\r\n                    placeholder=\"Image Name\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    style={{ marginTop: \"0.6rem\" }}\r\n                    onChange={e => setImageTitle(e.target.value)}\r\n                    value={imageTitle}\r\n                />\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"imageDesc\"\r\n                    placeholder=\"Image Description\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    multiline\r\n                    rows={1}\r\n                    rowsMax={4}\r\n                    style={{ marginTop: \"0.8rem\" }}\r\n                    onChange={e => setImageDesc(e.target.value)}\r\n                    value={imageDesc}\r\n                />\r\n                <div style={{ marginTop: \"1rem\" }}>\r\n                    <Typography variant=\"body1\" style={{ color: \"rgba(0, 0, 0, 0.54)\", marginBottom: \"0.25rem\" }}>\r\n                        Tag Color\r\n                    </Typography>\r\n                    <SliderPicker\r\n                        color={imageColor}\r\n                        onChangeComplete={(color) => setImageColor(color.hex)}>\r\n                    </SliderPicker>\r\n                </div>\r\n                <div style={{ marginTop: \"1rem\" }}>\r\n                    <Typography variant=\"body1\" style={{ color: \"rgba(0, 0, 0, 0.54)\", marginBottom: \"0.25rem\" }}>\r\n                            File Uploader\r\n                    </Typography>\r\n                    <DropzoneArea\r\n                        initialFiles = {file != null ? [file] : []}\r\n                        acceptedFiles={['image/*']}\r\n                        dropzoneText={\"Drag and drop an image here or click\"}\r\n                        onChange={(files) => {\r\n\r\n                            if (files[0] == undefined) {\r\n                                setFile(null)\r\n                            } else {\r\n                                setFile(files[0])\r\n                                \r\n                                //new image will have a diff last modified\r\n                                if (files[0].lastModified != imageLastModified) {\r\n                                    props.setImageUpdated(true)\r\n                                }\r\n                            }\r\n                        }}\r\n                        filesLimit={1}\r\n                        showPreviews={true}\r\n                        showPreviewsInDropzone={false}\r\n                        useChipsForPreview\r\n                        previewGridProps={{container: { spacing: 1, direction: 'row' }}}\r\n                        previewChipProps={{classes: { root: classes.previewChip } }}\r\n                        previewText=\"Selected files\"\r\n                    />\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n            <Button onClick={() => props.setImageModalOpen(false)} color=\"primary\">\r\n                Cancel\r\n            </Button>\r\n            <Button onClick={() => {\r\n                    if (validateData(imageTitle, file)) {\r\n                       if (props.action == \"CREATE\") {\r\n                           props.createNewImage({\r\n                               \"title\":imageTitle,\r\n                               \"description\":imageDesc,\r\n                               \"color\":imageColor,\r\n                           }, file)\r\n                       } else {\r\n                            props.updateImage({\r\n                                \"title\":imageTitle,\r\n                                \"description\":imageDesc,\r\n                                \"color\":imageColor,\r\n                                \"imageId\": props.imageModalData.imageId\r\n                            }, file)\r\n                       }\r\n                    }\r\n                }} \r\n                color=\"primary\">\r\n                {action}\r\n            </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default ImageModal","C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\firebase.js",[],"C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\Components\\DeleteModal.js",[],["82","83"],"C:\\Users\\alimu\\Documents\\Projects\\shopify-image-repo\\shopify-image\\src\\firebaseWithSecrets.js",[],{"ruleId":"84","severity":1,"message":"85","line":7,"column":8,"nodeType":"86","messageId":"87","endLine":7,"endColumn":14},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"84","severity":1,"message":"92","line":1,"column":8,"nodeType":"86","messageId":"87","endLine":1,"endColumn":12},{"ruleId":"93","severity":1,"message":"94","line":25,"column":13,"nodeType":"95","endLine":38,"endColumn":4},{"ruleId":"84","severity":1,"message":"96","line":27,"column":13,"nodeType":"86","messageId":"87","endLine":27,"endColumn":20},{"ruleId":"84","severity":1,"message":"97","line":2,"column":22,"nodeType":"86","messageId":"87","endLine":2,"endColumn":35},{"ruleId":"93","severity":1,"message":"98","line":58,"column":8,"nodeType":"99","endLine":58,"endColumn":29,"suggestions":"100"},{"ruleId":"93","severity":1,"message":"101","line":64,"column":8,"nodeType":"99","endLine":64,"endColumn":12,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":164,"column":32,"nodeType":"105","messageId":"106","endLine":164,"endColumn":34},{"ruleId":"103","severity":1,"message":"107","line":179,"column":37,"nodeType":"105","messageId":"106","endLine":179,"endColumn":39},{"ruleId":"93","severity":1,"message":"98","line":58,"column":6,"nodeType":"99","endLine":58,"endColumn":51,"suggestions":"108"},{"ruleId":"103","severity":1,"message":"107","line":61,"column":29,"nodeType":"105","messageId":"106","endLine":61,"endColumn":31},{"ruleId":"103","severity":1,"message":"107","line":61,"column":60,"nodeType":"105","messageId":"106","endLine":61,"endColumn":62},{"ruleId":"93","severity":1,"message":"98","line":59,"column":6,"nodeType":"99","endLine":59,"endColumn":51,"suggestions":"109"},{"ruleId":"103","severity":1,"message":"107","line":62,"column":29,"nodeType":"105","messageId":"106","endLine":62,"endColumn":31},{"ruleId":"103","severity":1,"message":"107","line":62,"column":60,"nodeType":"105","messageId":"106","endLine":62,"endColumn":62},{"ruleId":"110","severity":1,"message":"111","line":36,"column":17,"nodeType":"112","endLine":36,"endColumn":81},{"ruleId":"113","severity":1,"message":"114","line":51,"column":17,"nodeType":"115","endLine":51,"endColumn":42},{"ruleId":"103","severity":1,"message":"107","line":14,"column":31,"nodeType":"105","messageId":"106","endLine":14,"endColumn":33},{"ruleId":"84","severity":1,"message":"116","line":18,"column":12,"nodeType":"86","messageId":"87","endLine":18,"endColumn":21},{"ruleId":"103","severity":1,"message":"104","line":31,"column":46,"nodeType":"105","messageId":"106","endLine":31,"endColumn":48},{"ruleId":"93","severity":1,"message":"117","line":39,"column":8,"nodeType":"99","endLine":39,"endColumn":30,"suggestions":"118"},{"ruleId":"103","severity":1,"message":"107","line":53,"column":33,"nodeType":"105","messageId":"106","endLine":53,"endColumn":35},{"ruleId":"103","severity":1,"message":"107","line":126,"column":42,"nodeType":"105","messageId":"106","endLine":126,"endColumn":44},{"ruleId":"103","severity":1,"message":"104","line":132,"column":59,"nodeType":"105","messageId":"106","endLine":132,"endColumn":61},{"ruleId":"103","severity":1,"message":"107","line":153,"column":41,"nodeType":"105","messageId":"106","endLine":153,"endColumn":43},{"ruleId":"88","replacedBy":"119"},{"ruleId":"90","replacedBy":"120"},"no-unused-vars","'config' is defined but never used.","Identifier","unusedVar","no-native-reassign",["121"],"no-negated-in-lhs",["122"],"'logo' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'session' is assigned a value but never used.","'ThemeProvider' is defined but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["123"],"React Hook useEffect has a missing dependency: 'initializeImageData'. Either include it or remove the dependency array.",["124"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.",["125"],["126"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'imageFile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["127"],["121"],["122"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"132","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [props.authenticated, props.history]",{"range":"137","text":"138"},"Update the dependencies array to be: [db, initializeImageData]",{"range":"139","text":"140"},"Update the dependencies array to be: [props.authenticated, props.history, props.isAuthenticating]",{"range":"141","text":"142"},{"range":"143","text":"142"},"Update the dependencies array to be: [props, props.imageModalOpen]",{"range":"144","text":"145"},[1796,1817],"[props.authenticated, props.history]",[1925,1929],"[db, initializeImageData]",[1740,1785],"[props.authenticated, props.history, props.isAuthenticating]",[1743,1788],[1615,1637],"[props, props.imageModalOpen]"]