{"version":3,"sources":["logo.svg","Components/DeleteModal.js","Components/ImageCard.js","Components/ImageModal.js","firebaseWithSecrets.js","Components/MainPage.js","Components/Login.js","Components/Register.js","App.js","reportWebVitals.js","index.js"],"names":["DeleteModal","props","Dialog","open","onClose","setDeleteModalOpen","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","imageTitle","DialogActions","Button","onClick","color","deleteImg","autoFocus","useStyles","makeStyles","root","maxWidth","media","height","paddingTop","ImageCard","classes","avatarStyle","backgroundColor","imageData","useState","setOpen","deleteModalOpen","Card","className","style","width","src","imageSrc","title","state","CardHeader","avatar","Avatar","aria-label","avatarInitial","subheader","date","CardMedia","imageId","CardContent","Typography","variant","component","description","CardActions","size","updateImage","ImageModal","action","setImageTitle","imageColor","setImageColor","setImageFile","imageDesc","setImageDesc","imageLastModified","setImageLastModified","file","setFile","useEffect","imageModalData","img","File","type","lastModified","setImageUpdated","imageModalOpen","theme","createStyles","previewChip","minWidth","paddingBottom","TextField","margin","placeholder","fullWidth","marginTop","onChange","e","target","value","multiline","rows","rowsMax","marginBottom","onChangeComplete","hex","initialFiles","acceptedFiles","dropzoneText","files","undefined","filesLimit","showPreviews","showPreviewsInDropzone","useChipsForPreview","previewGridProps","container","spacing","direction","previewChipProps","previewText","setImageModalOpen","titleError","fileError","trim","length","alert","validateData","createNewImage","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","flexGrow","menuButton","marginRight","imageDataModel","userData","username","charAt","MainPage","imagesData","setImagesData","imageModalAction","setImageModalAction","user","setImageModalData","imageUpdated","db","setDb","authenticated","history","push","firestore","initializeImageData","a","email","collection","get","snapshot","docs","map","doc","Object","assign","data","i","image","Storage","level","then","res","catch","err","toBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","persistImageDataInDb","set","imageName","name","Date","toISOString","split","persistImageInS3","put","contentType","deleteImage","deletedFromDb","delete","remove","tempData","filter","valueOf","imageDataObj","AppBar","position","Toolbar","setAuth","Auth","signOut","padding","userConfirmed","display","justifyContent","IconButton","borderRadius","flexFlow","Copyright","align","Link","href","getFullYear","paper","flexDirection","alignItems","palette","secondary","main","form","submit","Login","password","setPassword","setEmail","setError","isAuthenticating","signInClicked","signIn","signInResp","setUser","setUserConfirmed","setIsAuthenticating","message","Container","CssBaseline","label","autoComplete","Grid","item","xs","Box","mt","Register","signUpClicked","signUp","attributes","registerResp","justify","App","currentSession","currentAuthenticatedUser","console","log","exact","path","render","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Amplify","configure","mandatorySignIn","region","process","REACT_APP_AMPLIFY_COGNITO_REGION","userPoolId","REACT_APP_AMPLIFY_COGNITO_USER_POOL_ID","userPoolWebClientId","REACT_APP_AMPLIFY_COGNITO_CLIENT_ID","authenticationFlowType","identityPoolId","REACT_APP_AMPLIFY_COGNITO_IDENTITY_POOL_ID","AWSS3","bucket","REACT_APP_AMPLIFY_S3_BUCKET","REACT_APP_AMPLIFY_S3_REGION","ReactDOM","StrictMode","document","getElementById"],"mappings":"4jBAAe,I,iNCQA,SAASA,EAAYC,GAClC,OACE,8BACE,eAACC,EAAA,EAAD,CACEC,KAAMF,EAAME,KACZC,QAAS,kBAAMH,EAAMI,oBAAmB,IACxCC,kBAAgB,qBAChBC,mBAAiB,2BAJnB,UAME,cAACC,EAAA,EAAD,CAAaC,GAAG,qBAAhB,SAAsC,6BACtC,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAmBF,GAAG,2BAAtB,8DACoDR,EAAMW,gBAG5D,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMd,EAAMI,oBAAmB,IAAQW,MAAM,UAA9D,oBAGA,cAACF,EAAA,EAAD,CAAQC,QAAS,WACbd,EAAMgB,UAAUhB,EAAMQ,IACtBR,EAAMI,oBAAmB,IAC1BW,MAAM,UAAUE,WAAS,EAH5B,4BCZV,IAAMC,EAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJC,SAAU,KAEZC,MAAO,CACLC,OAAQ,EACRC,WAAY,cAoDDC,EAhDG,SAAAzB,GAAU,IAAD,EAEpB0B,EAAUR,IACPS,EAAc,CAACC,gBAAiB5B,EAAM6B,UAAUd,OAH/B,EAICe,oBAAS,GAJV,mBAIhB5B,EAJgB,KAIV6B,EAJU,OAKuBD,oBAAS,GALhC,mBAKhBE,EALgB,KAKC5B,EALD,KAOvB,OACI,eAAC6B,EAAA,EAAD,CAAMC,UAAWR,EAAQN,KAAO,aAAhC,UACI,cAACnB,EAAA,EAAD,CAAQC,KAAMA,EAAMC,QAAS,kBAAM4B,GAAQ,IAA3C,SACI,qBAAKI,MAAO,CAAEC,MAAO,QAAUC,IAAKrC,EAAM6B,UAAUS,aAExD,cAACvC,EAAD,CAAaY,WAAYX,EAAM6B,UAAUU,MAAOvB,UAAWhB,EAAMgB,UAAWd,KAAM8B,EAAiB5B,mBAAoB,SAACoC,GAAD,OAAWpC,EAAmBoC,MACrJ,cAACC,EAAA,EAAD,CACIC,OACA,cAACC,EAAA,EAAD,CAAQC,aAAW,SAAST,MAAOR,EAAnC,SACK3B,EAAM6B,UAAUgB,gBAGrBN,MAAOvC,EAAM6B,UAAUU,MACvBO,UAAW9C,EAAM6B,UAAUkB,OAE/B,cAACC,EAAA,GAAD,GACId,UAAW,YACXpB,QAAS,kBAAMiB,GAAQ,KAF3B,0BAGeL,EAAQJ,OAHvB,sBAIWtB,EAAM6B,UAAUS,UAJ3B,sBAKWtC,EAAM6B,UAAUoB,SAL3B,IAOA,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQrC,MAAM,gBAAgBsC,UAAU,IAA5D,SACVrD,EAAM6B,UAAUyB,gBAGV,eAACC,EAAA,EAAD,WACI,cAAC1C,EAAA,EAAD,CAAQ2C,KAAK,QAAQzC,MAAM,UAAUD,QAAS,kBAAMd,EAAMyD,YAAYzD,EAAM6B,YAA5E,oBAGA,cAAChB,EAAA,EAAD,CAAQ2C,KAAK,QAAQzC,MAAM,UAAUD,QAAS,WAC1CV,GAAmB,IADvB,2B,+DCiHDsD,EApKI,SAAA1D,GACf,IAAI2D,EAAyB,UAAhB3D,EAAM2D,OAAqB,SAAW,SAD3B,EAGY7B,mBAAS,IAHrB,mBAGjBnB,EAHiB,KAGLiD,EAHK,OAIY9B,mBAAS,WAJrB,mBAIjB+B,EAJiB,KAILC,EAJK,OAKUhC,mBAAS,IALnB,mBAKNiC,GALM,aAMUjC,mBAAS,IANnB,mBAMjBkC,EANiB,KAMNC,EANM,OAQ0BnC,mBAAS,MARnC,mBAQjBoC,EARiB,KAQEC,EARF,OAUArC,mBAAS,MAVT,mBAUjBsC,EAViB,KAUXC,EAVW,KAYxBC,qBAAU,WAMN,GALAV,EAAc5D,EAAMuE,eAAN,OACdT,EAAc9D,EAAMuE,eAAN,OACdR,EAAa/D,EAAMuE,eAAN,UACbN,EAAajE,EAAMuE,eAAN,aAE2B,IAApCvE,EAAMuE,eAAN,SAAwC,CACxC,IAAIC,EAAM,IAAIC,KAAK,CAAC,IAAKzE,EAAMuE,eAAN,UAAkC,CAACG,KAAM,cAClEL,EAAQG,GACRL,EAAqBK,EAAIG,mBAEzBN,EAAQ,MAEZrE,EAAM4E,iBAAgB,KACvB,CAAC5E,EAAM6E,iBAEV,IAOInD,EAPcP,aAAW,SAAA2D,GAAK,OAAIC,YAAa,CAC/CC,YAAa,CACXC,SAAU,IACV5D,SAAU,SAIFH,GA8Bd,OACI,eAACjB,EAAA,EAAD,CAAQC,KAAMF,EAAM6E,eAAgBxE,kBAAgB,oBAApD,UACI,cAACE,EAAA,EAAD,CAAa4B,MAAO,CAAE+C,cAAe,KAAO1E,GAAG,oBAA/C,SAAoEmD,IACpE,eAAClD,EAAA,EAAD,CAAe0B,MAAO,CAAEX,WAAY,KAApC,UACI,cAAC2D,EAAA,EAAD,CACIlE,WAAS,EACTmE,OAAO,QACP5E,GAAG,YACH6E,YAAY,aACZX,KAAK,OACLY,WAAS,EACTnD,MAAO,CAAEoD,UAAW,UACpBC,SAAU,SAAAC,GAAC,OAAI7B,EAAc6B,EAAEC,OAAOC,QACtCA,MAAOhF,IAEX,cAACwE,EAAA,EAAD,CACIlE,WAAS,EACTmE,OAAO,QACP5E,GAAG,YACH6E,YAAY,oBACZX,KAAK,OACLY,WAAS,EACTM,WAAS,EACTC,KAAM,EACNC,QAAS,EACT3D,MAAO,CAAEoD,UAAW,UACpBC,SAAU,SAAAC,GAAC,OAAIxB,EAAawB,EAAEC,OAAOC,QACrCA,MAAO3B,IAEX,sBAAK7B,MAAO,CAAEoD,UAAW,QAAzB,UACI,cAACpC,EAAA,EAAD,CAAYC,QAAQ,QAAQjB,MAAO,CAAEpB,MAAO,sBAAuBgF,aAAc,WAAjF,uBAGA,cAAC,IAAD,CACIhF,MAAO8C,EACPmC,iBAAkB,SAACjF,GAAD,OAAW+C,EAAc/C,EAAMkF,WAGzD,sBAAK9D,MAAO,CAAEoD,UAAW,QAAzB,UACI,cAACpC,EAAA,EAAD,CAAYC,QAAQ,QAAQjB,MAAO,CAAEpB,MAAO,sBAAuBgF,aAAc,WAAjF,2BAGA,cAAC,IAAD,CACIG,aAAwB,MAAR9B,EAAe,CAACA,GAAQ,GACxC+B,cAAe,CAAC,WAChBC,aAAc,uCACdZ,SAAU,SAACa,QAESC,GAAZD,EAAM,GACNhC,EAAQ,OAERA,EAAQgC,EAAM,IAGVA,EAAM,GAAG1B,cAAgBT,GACzBlE,EAAM4E,iBAAgB,KAIlC2B,WAAY,EACZC,cAAc,EACdC,wBAAwB,EACxBC,oBAAkB,EAClBC,iBAAkB,CAACC,UAAW,CAAEC,QAAS,EAAGC,UAAW,QACvDC,iBAAkB,CAACrF,QAAS,CAAEN,KAAMM,EAAQsD,cAC5CgC,YAAY,yBAIxB,eAACpG,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMd,EAAMiH,mBAAkB,IAAQlG,MAAM,UAA7D,oBAGA,cAACF,EAAA,EAAD,CAAQC,QAAS,YArGJ,SAACyB,EAAO6B,GACzB,IAAI8C,EAAa,GACbC,EAAY,GAYhB,GALIA,EADQ,MAAR/C,EACY,uBAEA,IAPZ8C,EADuB,GAAvB3E,EAAM6E,OAAOC,OACA,0BAEA,IAQFA,OAAS,GAAKF,EAAUE,OAAS,EAC5CC,MAAMJ,EAAc,QAAUC,QAC3B,GAAID,EAAWG,OAAS,EAC3BC,MAAMJ,OACH,MAAIC,EAAUE,OAAS,GAG1B,OAAO,EAFPC,MAAMH,GAKV,OAAO,GA8ESI,CAAa5G,EAAYyD,KACN,UAAhBpE,EAAM2D,OACN3D,EAAMwH,eAAe,CACjB,MAAQ7G,EACR,YAAcqD,EACd,MAAQH,GACTO,GAEFpE,EAAMyD,YAAY,CACd,MAAQ9C,EACR,YAAcqD,EACd,MAAQH,EACR,QAAW7D,EAAMuE,eAAetB,SACjCmB,KAIfrD,MAAM,UAlBV,SAmBK4C,W,gBC7JhB8D,IAASC,cAVW,CACjBC,OAAQ,0CACRC,WAAY,2CACZC,UAAW,2BACXC,cAAe,uCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKHR,QAAf,ECDKvG,EAAYC,aAAW,SAAC2D,GAAD,MAAY,CACvC1D,KAAM,CACJ8G,SAAU,GAEZC,WAAY,CACVC,YAAatD,EAAM+B,QAAQ,IAE7BtE,MAAO,CACL2F,SAAU,OAIRG,EAAiB,SAAAC,GACnB,MAAO,CACH,cAAiBA,EAASC,SAASC,OAAO,GAC1C,UAAa,GACb,QAAW,GACX,MAAS,GACT,KAAQ,GACR,SAAY,GACZ,YAAe,GACf,MAAS,YAoOFC,EAhOE,SAAAzI,GACb,IAAM0B,EAAUR,IADM,EAEcY,mBAAS,IAFvB,mBAEf4G,EAFe,KAEHC,EAFG,OAIsB7G,oBAAS,GAJ/B,mBAIf+C,EAJe,KAICoC,EAJD,OAK0BnF,mBAAS,UALnC,mBAKf8G,EALe,KAKGC,EALH,OAMsB/G,mBAASuG,EAAerI,EAAM8I,OANpD,mBAMfvE,EANe,KAMCwE,EAND,OAOkBjH,oBAAS,GAP3B,mBAOfkH,EAPe,KAODpE,EAPC,OASF9C,mBAAS,MATP,mBASfmH,EATe,KASXC,EATW,KAYtB5E,qBAAU,WACDtE,EAAMmJ,gBACPD,EAAM,MACNP,EAAc,IACd3I,EAAMoJ,QAAQC,KAAK,WAEvBH,EAAMzB,EAAS6B,eAChB,CAACtJ,EAAMmJ,gBAEV7E,qBAAU,WACI,MAAN2E,GACAM,MAEL,CAACN,IAEJ,IAAMM,EAAmB,uCAAG,oCAAAC,EAAA,6DACpBC,EAAQzJ,EAAM8I,KAAKP,SACnBG,EAAa,GAFO,kBAIGO,EAAGS,WAAWD,GAAOE,MAJxB,OAIdC,EAJc,OAKpBlB,EAAakB,EAASC,KAAKC,KAAI,SAAAC,GAC3B,OAAOC,OAAOC,OAAO,GAAIF,EAAIG,OAAQ,CACjC,cAAiBlK,EAAM8I,KAAKP,SAASC,OAAO,GAC5C,QAAWuB,EAAIvJ,QARH,uDAYpB8G,MAAM,iCAAD,MAZe,+BAAAkC,EAAA,iBAgBfW,GAhBe,eAAAX,EAAA,6DAiBhBY,EAAQ1B,EAAWyB,GAjBH,SAkBdE,IAAQV,IAAIS,EAAMnH,QAAS,CAACqH,MAAO,YACpCC,MAAK,SAAAC,GACFJ,EAAM9H,SAAWkI,KAEpBC,OAAM,SAACC,GACJpD,MAAM,mDAAoDoD,GAE1DN,EAAM9H,SAAW,MAzBL,0CAgBf6H,EAAG,EAhBY,aAgBTA,EAAEzB,EAAWrB,QAhBJ,0CAgBf8C,GAhBe,iBAgBYA,IAhBZ,wBA4BxBxB,EAAcD,GA5BU,yDAAH,qDAyCnBiC,EAAW,SAAAvG,GAAI,OAAI,IAAIwG,SAAQ,SAACC,EAASC,GAC3C,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAc7G,GACrB2G,EAAOG,OAAS,kBAAML,EAAQE,EAAOI,SACrCJ,EAAOK,QAAU,SAAAC,GAAK,OAAIP,EAAOO,QAG/BC,EAAoB,uCAAG,WAAO7B,EAAOjJ,EAAI0J,EAAM9F,GAAxB,SAAAoF,EAAA,+EAEfP,EAAGS,WAAWD,GAAOM,IAAIvJ,GAAI+K,IAAI,CACnCC,UAAWpH,EAAKqH,KAChBlJ,MAAO2H,EAAK3H,MACZe,YAAa4G,EAAK5G,YAClBP,MAAM,IAAI2I,MAAOC,cAAcC,MAAM,KAAK,GAC1C7K,MAAOmJ,EAAKnJ,QAPK,iCASd,GATc,uCAWrBuG,MAAM,8BAAD,MAXgB,mBAYd,GAZc,yDAAH,4DAgBpBuE,EAAgB,uCAAG,WAAOrL,EAAI4D,GAAX,SAAAoF,EAAA,+EAEXa,IAAQyB,IAAItL,EAAI4D,EAAM,CACxBkG,MAAO,UACPyB,YAAa,cAJA,iCAMV,GANU,uCAQjBzE,MAAM,yBAAD,MARY,mBASV,GATU,yDAAH,wDAchB0E,EAAW,uCAAG,WAAOxL,GAAP,iBAAAgJ,EAAA,6DAEZyC,GAAgB,EAFJ,kBAINhD,EAAGS,WAAW1J,EAAM8I,KAAKP,UAAUwB,IAAIvJ,GAAI0L,SAJrC,OAKZD,GAAgB,EALJ,gDAOZ3E,MAAM,6BAPM,YASZ2E,EATY,4CAWF5B,IAAQ8B,OAAO3L,EAAI,CAAE8J,MAAO,YAX1B,2DAaRhD,MAAM,6BAbE,QAmBhB8E,GADIA,EAAW1D,GACK2D,QAAO,SAAA7H,GACvB,OAAOA,EAAIvB,SAAWzC,KAE1BmI,EAAcyD,GAtBE,iEAAH,sDA0BX3I,EAAW,uCAAG,WAAOyG,EAAM9F,GAAb,qBAAAoF,EAAA,sDACZC,EAAQzJ,EAAM8I,KAAKP,SACnB+C,EAAqB7B,EAAOS,EAAKjH,QAASiH,EAAM9F,IAAS4E,GACzD6C,EAAiB3B,EAAKjH,QAASmB,GAI/BgI,EAAW1D,EACNyB,EAAG,EARI,YAQDA,EAAGiC,EAAS/E,QARX,oBASR+E,EAASjC,GAAGlH,SAAWiH,EAAKjH,QATpB,oBAURmJ,EAASjC,GAAT,2BAAkBiC,EAASjC,IAAOD,IAC9BlB,EAXI,kCAYY2B,EAASvG,GAZrB,QAYA/B,EAZA,OAaJ+J,EAASjC,GAAG7H,SAAWD,EAbnB,4CAQmB8H,IARnB,uBAkBhBxB,EAAcyD,GACdnF,GAAkB,GAnBF,4CAAH,wDAuBXO,EAAc,uCAAG,WAAO0C,EAAM9F,GAAb,qBAAAoF,EAAA,6DACfC,EAAQzJ,EAAM8I,KAAKP,SACnB/H,GAAK,IAAIkL,MAAOY,UAAY,IAAM7C,EAElC6B,EAAqB7B,EAAOjJ,EAAI0J,EAAM9F,IACtCyH,EAAiBrL,EAAI4D,GALN,SASEuG,EAASvG,GATX,OASf9B,EATe,OAUfiK,EAAe,CACf,UAAanI,EAAKqH,KAClB,MAASvB,EAAK3H,MACd,YAAe2H,EAAK5G,YACpB,MAAQ,IAAIoI,MAAOC,cAAcC,MAAM,KAAK,GAC5C,MAAS1B,EAAKnJ,MACd,QAAWP,EACX,cAAiBiJ,EAAMjB,OAAO,GAC9B,SAAYlG,GAEhBqG,EAAc,GAAD,mBAAKD,GAAL,CAAiB6D,KAC9BtF,GAAkB,GArBC,2CAAH,wDAwBpB,OACI,gCACI,cAAC,EAAD,CAAYO,eAAgBA,EAAgB/D,YAAaA,EAAac,eAAgBA,EAAgBwE,kBAAmBA,EAAmBlE,eAAgBA,EAAgBoC,kBAAmB,SAACzE,GAAD,OAAWyE,EAAkBzE,IAAQmB,OAAQiF,EAAkBhE,gBAAiB,SAACpC,GAAD,OAAWoC,EAAgBpC,MAC1S,cAACgK,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,WACA,cAACvJ,EAAA,EAAD,CAAYC,QAAQ,KAAKlB,UAAWR,EAAQa,MAA5C,sCAGA,cAAC1B,EAAA,EAAD,CAAQE,MAAM,UAAUD,QAAS,WAC7Bd,EAAM2M,SAAQ,GACd3M,EAAMoJ,QAAQC,KAAK,UACnBuD,IAAKC,WAHT,yBAOJ,sBAAK3K,UAAU,UAAUC,MAAO,CAAE2K,QAAS,qBAA3C,WAES9M,EAAM+M,eACH,qBAAK5K,MAAO,CAAEoD,UAAW,QAAzB,SACI,eAACpC,EAAA,EAAD,CAAYC,QAAQ,YAAYjB,MAAO,CAAEpB,MAAO,OAAhD,iBACSf,EAAM8I,KAAKP,SADpB,qHAMZ,qBAAKpG,MAAO,CAAE6K,QAAS,OAAQC,eAAgB,SAAU1H,UAAW,UAApE,SACI,cAAC2H,EAAA,EAAD,CAAYpM,QAAS,WA3IjCiI,EAAkBV,EAAerI,EAAM8I,OA6IvBD,EAAoB,UACpB5B,GAAkB,IACnBzD,KAAK,SAASrB,MAAO,CAAEC,MAAO,OAAQ+K,aAAc,QAAUvK,aAAW,cAJ5E,SAKI,cAAC,IAAD,CAAeT,MAAO,CAAEC,MAAM,QAASb,OAAQ,eAGvD,qBAAKY,MAAO,CAAE6K,QAAS,OAAQI,SAAU,WAAY7H,UAAW,QAAhE,SAEQmD,EAAWoB,KAAI,SAACtF,EAAKhE,GACjB,OAAO,cAAC,EAAD,CAAWQ,UAAW,kBAAMgL,EAAYxH,EAAIvB,UAAUQ,YAAa,kBA7JnE5B,EA6JgG2C,EA5J3HqE,EAAoB,UACpBE,EAAkBlH,QAClBoF,GAAkB,GAHS,IAAApF,GA6J+GA,UAAW2C,GAAfhE,e,oEC/O9I,SAAS6M,KACP,OACE,eAAClK,EAAA,EAAD,CAAYC,QAAQ,QAAQrC,MAAM,gBAAgBuM,MAAM,SAAxD,UACG,kBACD,cAACC,EAAA,EAAD,CAAMxM,MAAM,UAAUyM,KAAK,2BAA3B,gCAEQ,KACP,IAAI9B,MAAO+B,cACX,OAKP,IAAMvM,GAAYC,aAAW,SAAC2D,GAAD,MAAY,CACvC4I,MAAO,CACLnI,UAAWT,EAAM+B,QAAQ,GACzBmG,QAAS,OACTW,cAAe,SACfC,WAAY,UAEdlL,OAAQ,CACN0C,OAAQN,EAAM+B,QAAQ,GACtBjF,gBAAiBkD,EAAM+I,QAAQC,UAAUC,MAE3CC,KAAM,CACJ5L,MAAO,OACPmD,UAAWT,EAAM+B,QAAQ,IAE3BoH,OAAQ,CACN7I,OAAQN,EAAM+B,QAAQ,EAAG,EAAG,QAIjB,SAASqH,GAAMlO,GAC5B,IAAM0B,EAAUR,KADmB,EAEHY,mBAAS,IAFN,mBAE5BqM,EAF4B,KAElBC,EAFkB,OAGTtM,mBAAS,IAHA,mBAG5B2H,EAH4B,KAGrB4E,EAHqB,OAITvM,mBAAS,IAJA,mBAI5BuJ,EAJ4B,KAIrBiD,EAJqB,KAMnChK,qBAAU,WACLtE,EAAMmJ,gBAAkBnJ,EAAMuO,kBAC7BvO,EAAMoJ,QAAQC,KAAK,OAEtB,CAACrJ,EAAMmJ,cAAenJ,EAAMuO,mBAE/B,IAAIC,EAAa,uCAAG,4BAAAhF,EAAA,yDACS,GAAvBC,EAAMrC,OAAOC,QAAyC,GAA1B8G,EAAS/G,OAAOC,OAD9B,gBAEdiH,EAAS,2CAFK,8BAIdA,EAAS,IAJK,kBAMe1B,IAAK6B,OAAOhF,EAAO0E,GANlC,OAMJO,EANI,OAOV1O,EAAM2M,SAAQ,GACd3M,EAAM2O,QAAQD,GACd1O,EAAM4O,kBAAiB,GACvB5O,EAAM6O,qBAAoB,GAVhB,kDAYVP,EAAS,KAAMQ,SAZL,0DAAH,qDAyBjB,OACE,eAACC,GAAA,EAAD,CAAW1L,UAAU,OAAOhC,SAAS,KAArC,UACE,cAAC2N,EAAA,EAAD,IACA,sBAAK9M,UAAWR,EAAQgM,MAAxB,UACE,cAAC/K,EAAA,EAAD,CAAQT,UAAWR,EAAQgB,OAA3B,SACE,cAAC,KAAD,MAEF,cAACS,EAAA,EAAD,CAAYE,UAAU,KAAKD,QAAQ,KAAnC,mBAGA,uBAAMlB,UAAWR,EAAQsM,KAAzB,UACE,cAAC7I,EAAA,EAAD,CACE/B,QAAQ,WACRgC,OAAO,SACPE,WAAS,EACT9E,GAAG,QACHyO,MAAM,gBACNxD,KAAK,QACLyD,aAAa,QACbjO,WAAS,EACTuE,SAxBiB,SAACC,GAC1B4I,EAAS5I,EAAEC,OAAOC,UAyBZ,cAACR,EAAA,EAAD,CACE/B,QAAQ,WACRgC,OAAO,SACPE,WAAS,EACTmG,KAAK,WACLwD,MAAM,WACNvK,KAAK,WACLlE,GAAG,WACH0O,aAAa,mBACb1J,SAvCa,SAACC,GACtB2I,EAAY3I,EAAEC,OAAOC,UAyCX0F,EAAMjE,OAAOC,OAAS,GACtB,cAAClE,EAAA,EAAD,CAAYE,UAAU,IAAID,QAAQ,YAAYrC,MAAM,QAApD,SACGsK,IAGP,cAACxK,EAAA,EAAD,CACEyE,WAAS,EACTlC,QAAQ,YACRrC,MAAM,UACNmB,UAAWR,EAAQuM,OACnBnN,QAAS0N,EALX,qBASA,eAACW,EAAA,EAAD,CAAMvI,WAAS,EAAf,UACE,cAACuI,EAAA,EAAD,CAAMC,MAAI,EAACC,IAAE,IAEb,cAACF,EAAA,EAAD,CAAMC,MAAI,EAAV,SACE,cAAC7B,EAAA,EAAD,CAAMC,KAAK,YAAYpK,QAAQ,QAA/B,SACG,8CAMX,cAACkM,GAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAClC,GAAD,SClIR,SAASA,KACP,OACE,eAAClK,EAAA,EAAD,CAAYC,QAAQ,QAAQrC,MAAM,gBAAgBuM,MAAM,SAAxD,UACG,kBACD,cAACC,EAAA,EAAD,CAAMxM,MAAM,UAAUyM,KAAK,2BAA3B,gCAEQ,KACP,IAAI9B,MAAO+B,cACX,OAKP,IAAMvM,GAAYC,aAAW,SAAC2D,GAAD,MAAY,CACvC4I,MAAO,CACLnI,UAAWT,EAAM+B,QAAQ,GACzBmG,QAAS,OACTW,cAAe,SACfC,WAAY,UAEdlL,OAAQ,CACN0C,OAAQN,EAAM+B,QAAQ,GACtBjF,gBAAiBkD,EAAM+I,QAAQC,UAAUC,MAE3CC,KAAM,CACJ5L,MAAO,OACPmD,UAAWT,EAAM+B,QAAQ,IAE3BoH,OAAQ,CACN7I,OAAQN,EAAM+B,QAAQ,EAAG,EAAG,QAIjB,SAAS2I,GAASxP,GAC/B,IAAM0B,EAAUR,KADsB,EAGNY,mBAAS,IAHH,mBAG/BqM,EAH+B,KAGrBC,EAHqB,OAIZtM,mBAAS,IAJG,mBAI/B2H,EAJ+B,KAIxB4E,EAJwB,OAKZvM,mBAAS,IALG,mBAK/BuJ,EAL+B,KAKxBiD,EALwB,KAOtChK,qBAAU,WACLtE,EAAMmJ,gBAAkBnJ,EAAMuO,kBAC7BvO,EAAMoJ,QAAQC,KAAK,OAEtB,CAACrJ,EAAMmJ,cAAenJ,EAAMuO,mBAE/B,IAAIkB,EAAa,uCAAG,4BAAAjG,EAAA,yDACS,GAAvBC,EAAMrC,OAAOC,QAAyC,GAA1B8G,EAAS/G,OAAOC,OAD9B,gBAEdiH,EAAS,2CAFK,8BAIdA,EAAS,IAJK,kBAMiB1B,IAAK8C,OAAO,CACnCnH,SAAUkB,EACV0E,SAAUA,EACVwB,WAAY,CACRlG,MAAOA,KAVL,OAMJmG,EANI,OAaV5P,EAAM2M,SAAQ,GAEd3M,EAAM2O,QAAQiB,EAAa9G,MAC3B9I,EAAM6O,qBAAoB,GAhBhB,kDAkBVP,EAAS,KAAMQ,SAlBL,0DAAH,qDA+BjB,OACE,eAACC,GAAA,EAAD,CAAW1L,UAAU,OAAOhC,SAAS,KAArC,UACE,cAAC2N,EAAA,EAAD,IACA,sBAAK9M,UAAWR,EAAQgM,MAAxB,UACE,cAAC/K,EAAA,EAAD,CAAQT,UAAWR,EAAQgB,OAA3B,SACE,cAAC,KAAD,MAEF,cAACS,EAAA,EAAD,CAAYE,UAAU,KAAKD,QAAQ,KAAnC,sBAGA,uBAAMlB,UAAWR,EAAQsM,KAAzB,UACE,eAACmB,EAAA,EAAD,CAAMvI,WAAS,EAACC,QAAS,EAAzB,UACE,cAACsI,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAAClK,EAAA,EAAD,CACE/B,QAAQ,WACRkC,WAAS,EACT9E,GAAG,QACHyO,MAAM,gBACNxD,KAAK,QACLyD,aAAa,QACb1J,SAxBa,SAACC,GAC1B4I,EAAS5I,EAAEC,OAAOC,YA0BV,cAACwJ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAAClK,EAAA,EAAD,CACE/B,QAAQ,WACRkC,WAAS,EACTmG,KAAK,WACLwD,MAAM,WACNvK,KAAK,WACLlE,GAAG,WACH0O,aAAa,mBACb1J,SAxCS,SAACC,GACtB2I,EAAY3I,EAAEC,OAAOC,eA4CX0F,EAAMjE,OAAOC,OAAS,GACtB,cAAClE,EAAA,EAAD,CAAYE,UAAU,IAAID,QAAQ,YAAYrC,MAAM,QAApD,SACGsK,IAGP,cAACxK,EAAA,EAAD,CACEyE,WAAS,EACTlC,QAAQ,YACRrC,MAAM,UACNmB,UAAWR,EAAQuM,OACnBnN,QAAS2O,EALX,sBASA,cAACN,EAAA,EAAD,CAAMvI,WAAS,EAACiJ,QAAQ,WAAxB,SACE,cAACV,EAAA,EAAD,CAAMC,MAAI,EAAV,SACE,cAAC7B,EAAA,EAAD,CAAMC,KAAK,SAASpK,QAAQ,QAA5B,wDAOR,cAACkM,GAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,GAAD,SCrGOO,OAlCf,WAAgB,IAAD,EACoBhO,oBAAS,GAD7B,mBACNqH,EADM,KACSwD,EADT,OAEmC7K,oBAAS,GAF5C,mBAENyM,EAFM,KAEYM,EAFZ,OAGW/M,mBAAS,MAHpB,mBAGNgH,EAHM,KAGA6F,EAHA,OAI6B7M,oBAAS,GAJtC,mBAINiL,EAJM,KAIS6B,EAJT,KAuBb,OAhBAtK,oBAAS,sBAAC,4BAAAkF,EAAA,+EAEgBoD,IAAKmD,iBAFrB,qBAGNpD,GAAQ,GAHF,SAIaC,IAAKoD,2BAJlB,OAIAlH,EAJA,OAKN6F,EAAQ7F,GACR8F,GAAiB,GACjBC,GAAoB,GAPd,kDASNA,GAAoB,GACpBlC,GAAQ,GACRsD,QAAQC,IAAR,MAXM,0DAaP,IAID,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAACrQ,GAAD,OAAcuO,GAAoBpF,EAAiB,cAAC,EAAD,2BAAcnJ,GAAd,IAAqB8I,KAAMA,EAAMiE,cAAeA,EAAe5D,cAAeA,EAAewD,QAASA,KAAa,cAAC,IAAD,CAAU2D,GAAG,cACjN,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASC,OAAQ,SAACrQ,GAAD,OAAW,cAACkO,GAAD,2BAAWlO,GAAX,IAAkB8I,KAAMA,EAAMK,cAAeA,EAAewD,QAASA,EAASgC,QAASA,EAASJ,iBAAkBA,EAAkBM,oBAAqBA,EAAqBD,iBAAkBA,QAC9O,cAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,YAAYC,OAAQ,SAACrQ,GAAD,OAAW,cAACwP,GAAD,2BAAcxP,GAAd,IAAqB8I,KAAMA,EAAMK,cAAeA,EAAewD,QAASA,EAASgC,QAASA,EAASJ,iBAAkBA,EAAkBM,oBAAqBA,cCjCtM0B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlG,MAAK,YAAkD,IAA/CmG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCCdO,WAAQC,UAAU,CAChBpE,KAAM,CACJqE,iBAAiB,EACjBC,OAAQC,sJAAYC,iCACpBC,WAAYF,sJAAYG,uCACxBC,oBAAqBJ,sJAAYK,oCACjCC,uBAAwB,qBACxBC,eAAgBP,sJAAYQ,4CAE9BtH,QAAS,CACPuH,MAAO,CACLC,OAAQV,sJAAYW,4BACpBZ,OAAQC,sJAAYY,gCAK1BC,IAAS3B,OACP,cAAC,IAAM4B,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1B5B,O","file":"static/js/main.9975bf85.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function DeleteModal(props) {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={() => props.setDeleteModalOpen(false)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Delete card confirmation\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete the card titled: {props.imageTitle}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => props.setDeleteModalOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => {\r\n              props.deleteImg(props.id)\r\n              props.setDeleteModalOpen(false)\r\n          }} color=\"primary\" autoFocus>\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","\r\nimport React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button'\r\nimport './ImageCard.css'\r\nimport DeleteModal from './DeleteModal'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  }\r\n}));\r\n\r\nconst ImageCard = props => {\r\n\r\n\tconst classes = useStyles();\r\n    const avatarStyle = {backgroundColor: props.imageData.color}\r\n    const [open, setOpen] = useState(false)\r\n    const [deleteModalOpen, setDeleteModalOpen] = useState(false)\r\n   \r\n    return (  \r\n        <Card className={classes.root + \" imageCard\"}>\r\n            <Dialog open={open} onClose={() => setOpen(false)}>\r\n                <img style={{ width: '100%' }} src={props.imageData.imageSrc} />\r\n            </Dialog>\r\n            <DeleteModal imageTitle={props.imageData.title} deleteImg={props.deleteImg} open={deleteModalOpen} setDeleteModalOpen={(state) => setDeleteModalOpen(state)}></DeleteModal>\r\n            <CardHeader\r\n                avatar={\r\n                <Avatar aria-label=\"recipe\" style={avatarStyle}>\r\n                    {props.imageData.avatarInitial}\r\n                </Avatar>\r\n                }\r\n                title={props.imageData.title}\r\n                subheader={props.imageData.date}\r\n            />\r\n            <CardMedia\r\n                className={'imageCard'}\r\n                onClick={() => setOpen(true)}\r\n                className={classes.media}\r\n                image={props.imageData.imageSrc}\r\n                title={props.imageData.imageId}\r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\t\t\t\t\t{props.imageData.description}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" color=\"primary\" onClick={() => props.updateImage(props.imageData)}>\r\n                \tUpdate\r\n                </Button>\r\n                <Button size=\"small\" color=\"primary\" onClick={() => {\r\n                    setDeleteModalOpen(true)\r\n                }}>\r\n                \tDelete\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ImageCard;","import {useState, useEffect} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { SliderPicker } from 'react-color';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {DropzoneArea} from 'material-ui-dropzone'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ImageModal = props => {\r\n    let action = props.action == \"CREATE\" ? 'Create' : 'Update'\r\n\r\n    const [imageTitle, setImageTitle] = useState(\"\")\r\n    const [imageColor, setImageColor] = useState(\"#FF0000\")\r\n    const [imageFile, setImageFile] = useState(\"\")\r\n    const [imageDesc, setImageDesc] = useState(\"\")\r\n\r\n    const [imageLastModified, setImageLastModified] = useState(null)\r\n    \r\n    const [file, setFile] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setImageTitle(props.imageModalData[\"title\"])\r\n        setImageColor(props.imageModalData[\"color\"])\r\n        setImageFile(props.imageModalData[\"imageSrc\"])\r\n        setImageDesc(props.imageModalData[\"description\"])\r\n\r\n        if (props.imageModalData[\"imageSrc\"] != \"\") {\r\n            let img = new File([\"\"], props.imageModalData[\"imageName\"],{type: \"image/png\"})\r\n            setFile(img)\r\n            setImageLastModified(img.lastModified)\r\n        } else {\r\n            setFile(null)\r\n        }\r\n        props.setImageUpdated(false)\r\n    }, [props.imageModalOpen])\r\n    \r\n    const useStyles = makeStyles(theme => createStyles({\r\n        previewChip: {\r\n          minWidth: 160,\r\n          maxWidth: 210\r\n        },\r\n      }));\r\n\r\n    let classes = useStyles();\r\n\r\n    const validateData = (title, file) => {\r\n        let titleError = \"\"\r\n        let fileError = \"\"\r\n        if (title.trim().length == 0) {\r\n            titleError = \"Title must not be empty\"\r\n        } else {\r\n            titleError = \"\"\r\n        }\r\n        if (file == null) {\r\n            fileError = \"Must attach an image\"\r\n        } else {\r\n            fileError = \"\"\r\n        }\r\n\r\n        if (titleError.length > 0 && fileError.length > 0) {\r\n            alert(titleError +  \" and \" + fileError)\r\n        } else if (titleError.length > 0) {\r\n            alert(titleError)\r\n        } else if (fileError.length > 0) {\r\n            alert(fileError)\r\n        } else {\r\n            return true\r\n        }\r\n\r\n        return false\r\n\r\n    }\r\n    \r\n    return (\r\n        <Dialog open={props.imageModalOpen} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle style={{ paddingBottom: \"0\" }} id=\"form-dialog-title\">{action}</DialogTitle>\r\n            <DialogContent style={{ paddingTop: \"0\" }}>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"imageName\"\r\n                    placeholder=\"Image Name\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    style={{ marginTop: \"0.6rem\" }}\r\n                    onChange={e => setImageTitle(e.target.value)}\r\n                    value={imageTitle}\r\n                />\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"imageDesc\"\r\n                    placeholder=\"Image Description\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    multiline\r\n                    rows={1}\r\n                    rowsMax={4}\r\n                    style={{ marginTop: \"0.8rem\" }}\r\n                    onChange={e => setImageDesc(e.target.value)}\r\n                    value={imageDesc}\r\n                />\r\n                <div style={{ marginTop: \"1rem\" }}>\r\n                    <Typography variant=\"body1\" style={{ color: \"rgba(0, 0, 0, 0.54)\", marginBottom: \"0.25rem\" }}>\r\n                        Tag Color\r\n                    </Typography>\r\n                    <SliderPicker\r\n                        color={imageColor}\r\n                        onChangeComplete={(color) => setImageColor(color.hex)}>\r\n                    </SliderPicker>\r\n                </div>\r\n                <div style={{ marginTop: \"1rem\" }}>\r\n                    <Typography variant=\"body1\" style={{ color: \"rgba(0, 0, 0, 0.54)\", marginBottom: \"0.25rem\" }}>\r\n                            File Uploader\r\n                    </Typography>\r\n                    <DropzoneArea\r\n                        initialFiles = {file != null ? [file] : []}\r\n                        acceptedFiles={['image/*']}\r\n                        dropzoneText={\"Drag and drop an image here or click\"}\r\n                        onChange={(files) => {\r\n\r\n                            if (files[0] == undefined) {\r\n                                setFile(null)\r\n                            } else {\r\n                                setFile(files[0])\r\n                                \r\n                                //new image will have a diff last modified\r\n                                if (files[0].lastModified != imageLastModified) {\r\n                                    props.setImageUpdated(true)\r\n                                }\r\n                            }\r\n                        }}\r\n                        filesLimit={1}\r\n                        showPreviews={true}\r\n                        showPreviewsInDropzone={false}\r\n                        useChipsForPreview\r\n                        previewGridProps={{container: { spacing: 1, direction: 'row' }}}\r\n                        previewChipProps={{classes: { root: classes.previewChip } }}\r\n                        previewText=\"Selected files\"\r\n                    />\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n            <Button onClick={() => props.setImageModalOpen(false)} color=\"primary\">\r\n                Cancel\r\n            </Button>\r\n            <Button onClick={() => {\r\n                    if (validateData(imageTitle, file)) {\r\n                       if (props.action == \"CREATE\") {\r\n                           props.createNewImage({\r\n                               \"title\":imageTitle,\r\n                               \"description\":imageDesc,\r\n                               \"color\":imageColor,\r\n                           }, file)\r\n                       } else {\r\n                            props.updateImage({\r\n                                \"title\":imageTitle,\r\n                                \"description\":imageDesc,\r\n                                \"color\":imageColor,\r\n                                \"imageId\": props.imageModalData.imageId\r\n                            }, file)\r\n                       }\r\n                    }\r\n                }} \r\n                color=\"primary\">\r\n                {action}\r\n            </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default ImageModal","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBIvy0l9O1TpEhi0CkZNn6FaZ6c4Tb1MJs\",\r\n    authDomain: \"shopify-image-repo-61597.firebaseapp.com\",\r\n    projectId: \"shopify-image-repo-61597\",\r\n    storageBucket: \"shopify-image-repo-61597.appspot.com\",\r\n    messagingSenderId: \"595216600066\",\r\n    appId: \"1:595216600066:web:76a04169e44e47bf636b1b\",\r\n    measurementId: \"G-953S4WHEWZ\"\r\n};\r\n// Initialize Firebase\r\n firebase.initializeApp(firebaseConfig);\r\n\r\n export default firebase","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Auth, Storage} from 'aws-amplify'\r\nimport ImageCard from './ImageCard'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport ImageModal from './ImageModal'\r\nimport firebase from '../firebaseWithSecrets'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst imageDataModel = userData => {\r\n    return {\r\n        \"avatarInitial\": userData.username.charAt(0),\r\n        \"imageName\": \"\",\r\n        \"imageId\": \"\",\r\n        \"title\": \"\",\r\n        \"date\": \"\",\r\n        \"imageSrc\": \"\",\r\n        \"description\": \"\",\r\n        \"color\": \"#FF0000\"\r\n    }\r\n}\r\n\r\nconst MainPage = props => {\r\n    const classes = useStyles();\r\n    const [imagesData, setImagesData] = useState([])\r\n    \r\n    const [imageModalOpen, setImageModalOpen] = useState(false)\r\n    const [imageModalAction, setImageModalAction] = useState('CREATE')\r\n    const [imageModalData, setImageModalData] = useState(imageDataModel(props.user))\r\n    const [imageUpdated, setImageUpdated] = useState(false)\r\n\r\n    const [db, setDb] = useState(null)\r\n\r\n    //Auth redirect and initialize images data\r\n    useEffect(() => {\r\n        if (!props.authenticated) {\r\n            setDb(null)\r\n            setImagesData([])\r\n            props.history.push(\"/login\")\r\n        }\r\n        setDb(firebase.firestore())\r\n    }, [props.authenticated])\r\n\r\n    useEffect(() => {\r\n        if (db != null) {\r\n            initializeImageData()\r\n        }\r\n    }, [db])\r\n\r\n    const initializeImageData = async () => {\r\n        let email = props.user.username\r\n        let imagesData = []\r\n        try {\r\n            const snapshot = await db.collection(email).get()\r\n            imagesData = snapshot.docs.map(doc => {\r\n                return Object.assign({}, doc.data(), { \r\n                    \"avatarInitial\": props.user.username.charAt(0),\r\n                    \"imageId\": doc.id\r\n                })\r\n            })\r\n        } catch(err) {\r\n            alert(\"Issue in retrieving image data\", err)\r\n            return\r\n        }\r\n\r\n        for (let i =0; i<imagesData.length; i++) {\r\n            let image = imagesData[i]\r\n            await Storage.get(image.imageId, {level: 'private'})\r\n                .then(res => {\r\n                    image.imageSrc = res\r\n                })\r\n                .catch((err) => {\r\n                    alert(\"Issue retrieving image, blank image will be used\", err)\r\n                    //TODO update this to an actual image in resources\r\n                    image.imageSrc = \"\"\r\n                })\r\n        }\r\n        setImagesData(imagesData)\r\n    }\r\n\r\n    const onImageCardUpdateClick = imageData => {\r\n        setImageModalAction('UPDATE')\r\n        setImageModalData(imageData)\r\n        setImageModalOpen(true)\r\n    }\r\n\r\n    const resetImageData = () => {\r\n        setImageModalData(imageDataModel(props.user))\r\n    }\r\n\r\n    const toBase64 = file => new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n\r\n    const persistImageDataInDb = async (email, id, data, file) => {\r\n        try {\r\n            await db.collection(email).doc(id).set({\r\n                imageName: file.name,\r\n                title: data.title,\r\n                description: data.description,\r\n                date: new Date().toISOString().split('T')[0],\r\n                color: data.color\r\n            })\r\n            return true\r\n        } catch (err) {\r\n            alert(\"Error persisting image data\", err)\r\n            return false\r\n        }\r\n    }\r\n\r\n    const persistImageInS3 = async (id, file) => {\r\n        try{\r\n            await Storage.put(id, file, {\r\n                level: 'private',\r\n                contentType: 'image/png'\r\n            })\r\n            return true\r\n        }catch(err) {\r\n            alert(\"Error persisting image\", err)\r\n            return false\r\n        }\r\n    }\r\n\r\n    //DELETING IMAGE\r\n    const deleteImage = async (id) => {\r\n        \r\n        let deletedFromDb = false\r\n        try {\r\n            await db.collection(props.user.username).doc(id).delete()\r\n            deletedFromDb = true\r\n        } catch(err) {\r\n            alert(\"Error deleting image data\")\r\n        }\r\n        if (deletedFromDb){\r\n            try {\r\n                await Storage.remove(id, { level: 'private' })\r\n            } catch(err) {\r\n                alert(\"Error deleting image data\")\r\n            }\r\n        }\r\n\r\n        //Fake delete if the above doesnt end up working\r\n        let tempData = imagesData\r\n        tempData = tempData.filter(img => {\r\n            return img.imageId != id\r\n        })\r\n        setImagesData(tempData)\r\n    }\r\n\r\n    //UPDATING IMAGE\r\n    const updateImage = async (data, file) => {\r\n        let email = props.user.username\r\n        if (persistImageDataInDb(email, data.imageId, data, file) && imageUpdated) {\r\n            persistImageInS3(data.imageId, file)\r\n        }\r\n\r\n        //Can still fake update locally even if the above fail and throw some errors\r\n        let tempData = imagesData\r\n        for (let i =0; i< tempData.length; i++) {\r\n            if (tempData[i].imageId == data.imageId) {\r\n                tempData[i] = {...tempData[i], ...data}\r\n                if (imageUpdated) {\r\n                    let src = await toBase64(file)\r\n                    tempData[i].imageSrc = src\r\n                }\r\n                break\r\n            }\r\n        }\r\n        setImagesData(tempData)\r\n        setImageModalOpen(false)\r\n    }\r\n\r\n    //CREATING IMAGE\r\n    const createNewImage = async (data, file) => {\r\n        let email = props.user.username\r\n        let id = new Date().valueOf() + \"-\" + email\r\n        \r\n        if (persistImageDataInDb(email, id, data, file)) {\r\n            persistImageInS3(id, file)\r\n        }\r\n\r\n        //Can still fake update even if the above fail and throw some errors\r\n        let imageSrc = await toBase64(file)\r\n        let imageDataObj = {\r\n            \"imageName\": file.name,\r\n            \"title\": data.title,\r\n            \"description\": data.description,\r\n            \"date\": new Date().toISOString().split('T')[0],\r\n            \"color\": data.color,\r\n            \"imageId\": id,\r\n            \"avatarInitial\": email.charAt(0),\r\n            \"imageSrc\": imageSrc\r\n        }\r\n        setImagesData([...imagesData, imageDataObj])\r\n        setImageModalOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ImageModal createNewImage={createNewImage} updateImage={updateImage} imageModalData={imageModalData} setImageModalData={setImageModalData} imageModalOpen={imageModalOpen} setImageModalOpen={(state) => setImageModalOpen(state)} action={imageModalAction} setImageUpdated={(state) => setImageUpdated(state)} />\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Shopify Image Repository\r\n                </Typography>\r\n                <Button color=\"inherit\" onClick={() => {\r\n                    props.setAuth(false)\r\n                    props.history.push(\"/login\")\r\n                    Auth.signOut()\r\n                }}>Logout</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className=\"content\" style={{ padding: \"0px 16px 0px 16px\" }}>\r\n                {\r\n                    !props.userConfirmed && (\r\n                        <div style={{ marginTop: \"1rem\" }}>\r\n                            <Typography variant=\"subtitle2\" style={{ color: 'red' }}>\r\n                                Hey {props.user.username}. Welcome to your image repo. Please verify your email address or you will not be able to login later. Thanks\r\n                            </Typography>\r\n                        </div>\r\n                    )\r\n                }\r\n                <div style={{ display: 'flex', justifyContent: 'center', marginTop: '0.8rem' }}>\r\n                    <IconButton onClick={() => {\r\n                        resetImageData()\r\n                        setImageModalAction('CREATE')\r\n                        setImageModalOpen(true)\r\n                    }} size=\"medium\" style={{ width: \"100%\", borderRadius: \"10px\" }} aria-label=\"Add a photo\">\r\n                        <AddAPhotoIcon style={{ width:'1.5em', height: '1.5em' }} />\r\n                    </IconButton>\r\n                </div>\r\n                <div style={{ display: 'flex', flexFlow: 'row wrap', marginTop: '1rem' }}>\r\n                    {\r\n                        imagesData.map((img, id) => {\r\n                            return <ImageCard deleteImg={() => deleteImage(img.imageId)} updateImage={() => onImageCardUpdateClick(img)} key={id} imageData={img}/>\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage","import React, { useState, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Auth } from 'aws-amplify'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Shopify Image Repo\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Login(props) {\r\n  const classes = useStyles();\r\n  const [password, setPassword] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [error, setError] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    if(props.authenticated && !props.isAuthenticating) {\r\n        props.history.push(\"/\")\r\n    }\r\n  }, [props.authenticated, props.isAuthenticating])\r\n\r\n  let signInClicked = async () => {\r\n    if (email.trim().length == 0 || password.trim().length == 0) {\r\n        setError(\"Email and/or password must not be empty\")\r\n    } else {\r\n        setError(\"\")\r\n        try {\r\n            const signInResp = await Auth.signIn(email, password)\r\n            props.setAuth(true)\r\n            props.setUser(signInResp)\r\n            props.setUserConfirmed(true)\r\n            props.setIsAuthenticating(false)\r\n        } catch(error) {\r\n            setError(error.message)\r\n        }\r\n    }\r\n  }\r\n\r\n  let passwordOnChange = (e) => {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  let emailAddressOnChange = (e) => {\r\n    setEmail(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login\r\n        </Typography>\r\n        <form className={classes.form}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={emailAddressOnChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={passwordOnChange}\r\n          />\r\n          {\r\n              error.trim().length > 0 &&\r\n              <Typography component=\"p\" variant=\"subtitle2\" color=\"error\">\r\n                {error}\r\n              </Typography>\r\n          }\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={signInClicked}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/register\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Auth } from 'aws-amplify'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Shopify Image Repo\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Register(props) {\r\n  const classes = useStyles();\r\n\r\n  const [password, setPassword] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [error, setError] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    if(props.authenticated && !props.isAuthenticating) {\r\n        props.history.push(\"/\")\r\n    }\r\n  }, [props.authenticated, props.isAuthenticating])\r\n\r\n  let signUpClicked = async () => {\r\n    if (email.trim().length == 0 || password.trim().length == 0) {\r\n        setError(\"Email and/or password must not be empty\")\r\n    } else {\r\n        setError(\"\")\r\n        try {\r\n            const registerResp = await Auth.signUp({\r\n                username: email,\r\n                password: password,\r\n                attributes: {\r\n                    email: email\r\n                }\r\n            })\r\n            props.setAuth(true)\r\n            debugger\r\n            props.setUser(registerResp.user)\r\n            props.setIsAuthenticating(false)\r\n        } catch(error) {\r\n            setError(error.message)\r\n        }\r\n    }\r\n  }\r\n\r\n  let passwordOnChange = (e) => {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  let emailAddressOnChange = (e) => {\r\n    setEmail(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register\r\n        </Typography>\r\n        <form className={classes.form}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={emailAddressOnChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={passwordOnChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {\r\n              error.trim().length > 0 &&\r\n              <Typography component=\"p\" variant=\"subtitle2\" color=\"error\">\r\n                {error}\r\n              </Typography>\r\n          }\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={signUpClicked}\r\n          >\r\n            Register\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import logo from './logo.svg';\nimport './App.css';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport MainPage from './Components/MainPage.js'\nimport Login from './Components/Login'\nimport Register from './Components/Register'\nimport { Auth } from 'aws-amplify'\n\nimport {useEffect, useState} from 'react'\n\nfunction App() {\n  const [authenticated, setAuth] = useState(false)\n  const [isAuthenticating, setIsAuthenticating] = useState(true)\n  const [user, setUser] = useState(null)\n  const [userConfirmed, setUserConfirmed] = useState(false)\n\n\n  useEffect(async () => {\n    try{\n      const session = await Auth.currentSession()\n      setAuth(true)\n      const user = await Auth.currentAuthenticatedUser()\n      setUser(user)\n      setUserConfirmed(true)\n      setIsAuthenticating(false)\n    } catch(error) {\n      setIsAuthenticating(true)\n      setAuth(false)\n      console.log(error)\n    }\n  }, [])\n\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" render={(props) => ((!isAuthenticating && authenticated) ? <MainPage {...props} user={user} userConfirmed={userConfirmed} authenticated={authenticated} setAuth={setAuth}/> : <Redirect to=\"/login\" />)}></Route>\n        <Route exact path=\"/login\" render={(props) => <Login {...props} user={user} authenticated={authenticated} setAuth={setAuth} setUser={setUser} isAuthenticating={isAuthenticating} setIsAuthenticating={setIsAuthenticating} setUserConfirmed={setUserConfirmed}/>}></Route>\n        <Route exact path=\"/register\" render={(props) => <Register {...props} user={user} authenticated={authenticated} setAuth={setAuth} setUser={setUser} isAuthenticating={isAuthenticating} setIsAuthenticating={setIsAuthenticating} />}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Amplify from 'aws-amplify'\nimport config from './config.json'\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: process.env.REACT_APP_AMPLIFY_COGNITO_REGION,\n    userPoolId: process.env.REACT_APP_AMPLIFY_COGNITO_USER_POOL_ID,\n    userPoolWebClientId: process.env.REACT_APP_AMPLIFY_COGNITO_CLIENT_ID,\n    authenticationFlowType: 'USER_PASSWORD_AUTH',\n    identityPoolId: process.env.REACT_APP_AMPLIFY_COGNITO_IDENTITY_POOL_ID\n  },\n  Storage :{\n    AWSS3: {\n      bucket: process.env.REACT_APP_AMPLIFY_S3_BUCKET,\n      region: process.env.REACT_APP_AMPLIFY_S3_REGION\n    }\n  }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}